#!/bin/bash

# Customizable Settings
VOLUME_NAME=Development
WORKSPACE=${HOME}/.${VOLUME_NAME}.dmg.sparseimage
MOUNT_POINT=${HOME}/${VOLUME_NAME}
VOLUME_SIZE=100g

create()
{
    hdiutil create \
	-type SPARSE \
	-fs 'Case-sensitive Journaled HFS+' \
	-size ${VOLUME_SIZE} \
	-volname "${VOLUME_NAME}" \
	"${WORKSPACE}"
}

automount()
{
    local TEMP_FILE=$(mktemp 2> /dev/null)
    cat << EOF > ${TEMP_FILE}
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
    <dict>
        <key>RunAtLoad</key>
        <true/>
        <key>Label</key>
        <string>com.workspace</string>
        <key>ProgramArguments</key>
        <array>
            <string>hdiutil</string>
            <string>attach</string>
            <string>-notremovable</string>
            <string>-nobrowse</string>
            <string>-mountpoint</string>
            <string>${MOUNT_POINT}</string>
            <string>${WORKSPACE}</string>
        </array>
    </dict>
</plist>
EOF

    local DAEMON_FILE=/Library/LaunchDaemons/com.workspace.plist
    chmod 644 ${TEMP_FILE}
    sudo chown root:wheel ${TEMP_FILE}
    sudo mv ${TEMP_FILE} ${DAEMON_FILE}
    sudo launchctl load -w ${DAEMON_FILE}
}

detach()
{
    DISK=$(hdiutil info | grep "${MOUNT_POINT}" | cut -f1)
    if [ ! -z ${DISK} ]; then
        sudo hdiutil detach ${DISK}
    fi
}

attach()
{
    sudo hdiutil attach -notremovable -nobrowse -mountpoint "${MOUNT_POINT}" "${WORKSPACE}"
}

compact()
{
    detach
    hdiutil compact "${WORKSPACE}" -batteryallowed
    attach
}

help()
{
    cat <<EOF
usage: workspace <command>

Possible commands:
   create       Initialize case-sensitive volume (only needed first time)
   automount    Configure OS X to mount the volume automatically on restart
   mount        Attach the case-sensitive volume
   unmount      Detach the case-sensitive volume
   compact      Remove any uneeded reserved space in the volume
   help         Display this message
EOF
}

invalid()
{
    printf "workspace: '$1' is not a valid command.\n\n";
    help
}

case "$1" in
    create) create;;
    automount) automount;;
    mount) attach;;
    unmount) detach;;
    compact) compact;;
    help) help;;
    '') help;;
    *) invalid $1;;
esac
